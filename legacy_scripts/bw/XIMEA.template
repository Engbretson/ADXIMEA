# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, XIMEA.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)DeviceVendorName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceVendorName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceModelName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceModelName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceManufacturerInfo_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceManufacturerInfo")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceFirmwareVersion_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceFirmwareVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceUserID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceUserID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceTemperatureSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTemperatureSelector")
  field(ZRST, "SensorBoard")
  field(ZRVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceTemperatureSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTemperatureSelector")
  field(ZRST, "SensorBoard")
  field(ZRVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)DeviceTemperature_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTemperature")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)DeviceTemperature") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTemperature")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)TLParamsLocked_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLParamsLocked")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)TLParamsLocked") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLParamsLocked")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceLinkThroughputLimitMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceLinkThroughputLimitMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "On")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceLinkThroughputLimitMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceLinkThroughputLimitMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "On")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DeviceLinkThroughputLimit_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceLinkThroughputLimit")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DeviceLinkThroughputLimit") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceLinkThroughputLimit")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorWidth")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorWidth")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorHeight_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorHeight")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorHeight") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorHeight")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Width_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Width")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Width") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Width")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Height_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Height")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Height") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Height")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PixelFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormat")
  field(ZRST, "Mono10")
  field(ZRVL, "0x01100003")
  field(ONST, "Mono12")
  field(ONVL, "0x01100005")
  field(TWST, "Mono8")
  field(TWVL, "0x01080001")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PixelFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormat")
  field(ZRST, "Mono10")
  field(ZRVL, "0x01100003")
  field(ONST, "Mono12")
  field(ONVL, "0x01100005")
  field(TWST, "Mono8")
  field(TWVL, "0x01080001")
  field(DISA, "0")
}

record(longin, "$(P)$(R)BinningHorizontal_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningHorizontal")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BinningHorizontal") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningHorizontal")
  field(DISA, "0")
}

record(longin, "$(P)$(R)BinningVertical_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningVertical")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BinningVertical") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningVertical")
  field(DISA, "0")
}

record(longin, "$(P)$(R)OffsetX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)OffsetX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)OffsetY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)OffsetY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetY")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)SensorShutterMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorShutterMode")
  field(ZRST, "Global")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)SensorShutterMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorShutterMode")
  field(ZRST, "Global")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AcquisitionMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionMode")
  field(ZRST, "Continuous")
  field(ZRVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AcquisitionMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionMode")
  field(ZRST, "Continuous")
  field(ZRVL, "2")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionStart") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStart")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionStop") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStop")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ExposureTime_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTime")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ExposureTime") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTime")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSelector")
  field(ZRST, "ExposureActive")
  field(ZRVL, "1")
  field(ONST, "FrameBurstActive")
  field(ONVL, "3")
  field(TWST, "FrameBurstStart")
  field(TWVL, "2")
  field(THST, "FrameStart")
  field(THVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSelector")
  field(ZRST, "ExposureActive")
  field(ZRVL, "1")
  field(ONST, "FrameBurstActive")
  field(ONVL, "3")
  field(TWST, "FrameBurstStart")
  field(TWVL, "2")
  field(THST, "FrameStart")
  field(THVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "On")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "On")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longout, "$(P)$(R)TriggerSoftware") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSoftware")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSource")
  field(ZRST, "Line1")
  field(ZRVL, "1")
  field(ONST, "Software")
  field(ONVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSource")
  field(ZRST, "Line1")
  field(ZRVL, "1")
  field(ONST, "Software")
  field(ONVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerActivation")
  field(ZRST, "FallingEdge")
  field(ZRVL, "1")
  field(ONST, "RisingEdge")
  field(ONVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerActivation")
  field(ZRST, "FallingEdge")
  field(ZRVL, "1")
  field(ONST, "RisingEdge")
  field(ONVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)AcquisitionFrameRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFrameRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)AcquisitionFrameRate") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFrameRate")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionTimeout_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTimeout")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionTimeout") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTimeout")
  field(DISA, "0")
}

record(bi, "$(P)$(R)AEAGEnable_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGEnable")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)AEAGEnable") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGEnable")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(ai, "$(P)$(R)AEAGExpPrio_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGExpPrio")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)AEAGExpPrio") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGExpPrio")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AEAGExpLim_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGExpLim")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AEAGExpLim") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGExpLim")
  field(DISA, "0")
}

record(ai, "$(P)$(R)AEAGGainLim_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGGainLim")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)AEAGGainLim") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGGainLim")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AEAGLevel_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGLevel")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AEAGLevel") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGLevel")
  field(DISA, "0")
}

record(bi, "$(P)$(R)BadpixelCorrection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BadpixelCorrection")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)BadpixelCorrection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BadpixelCorrection")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionBuffersQueueSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionBuffersQueueSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionBuffersQueueSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionBuffersQueueSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionBurstFrameCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionBurstFrameCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionBurstFrameCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionBurstFrameCount")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AcquisitionTimingMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTimingMode")
  field(ZRST, "FrameRate")
  field(ZRVL, "1")
  field(ONST, "FreeRun")
  field(ONVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AcquisitionTimingMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTimingMode")
  field(ZRST, "FrameRate")
  field(ZRVL, "1")
  field(ONST, "FreeRun")
  field(ONVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSelector")
  field(ZRST, "Line1")
  field(ZRVL, "0")
  field(ONST, "Line2")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSelector")
  field(ZRST, "Line1")
  field(ZRVL, "0")
  field(ONST, "Line2")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineMode")
  field(ZRST, "Input")
  field(ZRVL, "0")
  field(ONST, "Output")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineMode")
  field(ZRST, "Input")
  field(ZRVL, "0")
  field(ONST, "Output")
  field(ONVL, "1")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LineInverter_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInverter")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LineInverter") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInverter")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LineStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatus")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LineStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatus")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSource")
  field(ZRST, "ExposureActive")
  field(ZRVL, "4")
  field(ONST, "FrameActive")
  field(ONVL, "2")
  field(TWST, "Off")
  field(TWVL, "0")
  field(THST, "UserOutput0")
  field(THVL, "100")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSource")
  field(ZRST, "ExposureActive")
  field(ZRVL, "4")
  field(ONST, "FrameActive")
  field(ONVL, "2")
  field(TWST, "Off")
  field(TWVL, "0")
  field(THST, "UserOutput0")
  field(THVL, "100")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFormat")
  field(ZRST, "OptoCoupled")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFormat")
  field(ZRST, "OptoCoupled")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)UserOutputSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputSelector")
  field(ZRST, "UserOutput0")
  field(ZRVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)UserOutputSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputSelector")
  field(ZRST, "UserOutput0")
  field(ZRVL, "1")
  field(DISA, "0")
}

record(bi, "$(P)$(R)UserOutputValue_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputValue")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)UserOutputValue") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputValue")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TimeStampResetSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TimeStampResetSource")
  field(ZRST, "ResetOff")
  field(ZRVL, "0")
  field(ONST, "ResetSourceExpos")
  field(ONVL, "20")
  field(TWST, "ResetSourceExpos")
  field(TWVL, "21")
  field(THST, "ResetSourceFrame")
  field(THVL, "22")
  field(FRST, "ResetSourceFrame")
  field(FRVL, "23")
  field(FVST, "ResetSourceGPI1")
  field(FVVL, "1")
  field(SXST, "ResetSourceGPI1_")
  field(SXVL, "5")
  field(SVST, "ResetSourceGPO1")
  field(SVVL, "9")
  field(EIST, "ResetSourceGPO1_")
  field(EIVL, "13")
  field(NIST, "ResetSourceSoftw")
  field(NIVL, "19")
  field(TEST, "ResetSourceTrigg")
  field(TEVL, "17")
  field(ELST, "ResetSourceTrigg")
  field(ELVL, "18")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TimeStampResetSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TimeStampResetSource")
  field(ZRST, "ResetOff")
  field(ZRVL, "0")
  field(ONST, "ResetSourceExpos")
  field(ONVL, "20")
  field(TWST, "ResetSourceExpos")
  field(TWVL, "21")
  field(THST, "ResetSourceFrame")
  field(THVL, "22")
  field(FRST, "ResetSourceFrame")
  field(FRVL, "23")
  field(FVST, "ResetSourceGPI1")
  field(FVVL, "1")
  field(SXST, "ResetSourceGPI1_")
  field(SXVL, "5")
  field(SVST, "ResetSourceGPO1")
  field(SVVL, "9")
  field(EIST, "ResetSourceGPO1_")
  field(EIVL, "13")
  field(NIST, "ResetSourceSoftw")
  field(NIVL, "19")
  field(TEST, "ResetSourceTrigg")
  field(TEVL, "17")
  field(ELST, "ResetSourceTrigg")
  field(ELVL, "18")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TimeStampResetMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TimeStampResetMode")
  field(ZRST, "ArmOnce")
  field(ZRVL, "0")
  field(ONST, "ArmPersist")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TimeStampResetMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TimeStampResetMode")
  field(ZRST, "ArmOnce")
  field(ZRVL, "0")
  field(ONST, "ArmPersist")
  field(ONVL, "1")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Gain_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Gain")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Gain") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Gain")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PayloadSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PayloadSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)PayloadSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PayloadSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionTransportBufferSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTransportBufferSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionTransportBufferSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTransportBufferSize")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LEDSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LEDSelector")
  field(ZRST, "POWER")
  field(ZRVL, "3")
  field(ONST, "STATUS1")
  field(ONVL, "1")
  field(TWST, "STATUS2")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LEDSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LEDSelector")
  field(ZRST, "POWER")
  field(ZRVL, "3")
  field(ONST, "STATUS1")
  field(ONVL, "1")
  field(TWST, "STATUS2")
  field(TWVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LEDSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LEDSource")
  field(ZRST, "Acquisition")
  field(ZRVL, "4")
  field(ONST, "Blink")
  field(ONVL, "9")
  field(TWST, "ExposureActive")
  field(TWVL, "5")
  field(THST, "FrameActive")
  field(THVL, "6")
  field(FRST, "Off")
  field(FRVL, "7")
  field(FVST, "On")
  field(FVVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LEDSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LEDSource")
  field(ZRST, "Acquisition")
  field(ZRVL, "4")
  field(ONST, "Blink")
  field(ONVL, "9")
  field(TWST, "ExposureActive")
  field(TWVL, "5")
  field(THST, "FrameActive")
  field(THVL, "6")
  field(FRST, "Off")
  field(FRVL, "7")
  field(FVST, "On")
  field(FVVL, "8")
  field(DISA, "0")
}

