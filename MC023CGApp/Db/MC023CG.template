# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, MC023CG.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)DeviceVendorName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceVendorName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceModelName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceModelName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceManufacturerInfo_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceManufacturerInfo")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceFirmwareVersion_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceFirmwareVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceUserID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceUserID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceTemperatureSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTemperatureSelector")
  field(ZRST, "SensorBoard")
  field(ZRVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceTemperatureSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTemperatureSelector")
  field(ZRST, "SensorBoard")
  field(ZRVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)DeviceTemperature_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTemperature")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)DeviceTemperature") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTemperature")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)TLParamsLocked_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLParamsLocked")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)TLParamsLocked") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLParamsLocked")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceLinkThroughputLimitMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceLinkThroughputLimitMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "On")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceLinkThroughputLimitMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceLinkThroughputLimitMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "On")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DeviceLinkThroughputLimit_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceLinkThroughputLimit")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DeviceLinkThroughputLimit") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceLinkThroughputLimit")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceVersion_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorWidth")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorWidth")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorHeight_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorHeight")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorHeight") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorHeight")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Width_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Width")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Width") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Width")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Height_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Height")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Height") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Height")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PixelFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormat")
  field(ZRST, "BayerBG10")
  field(ZRVL, "0x0110000F")
  field(ONST, "BayerBG10p")
  field(ONVL, "0x010A0052")
  field(TWST, "BayerBG12")
  field(TWVL, "0x01100013")
  field(THST, "BayerBG12p")
  field(THVL, "0x010C0053")
  field(FRST, "BayerBG8")
  field(FRVL, "0x0108000B")
  field(FVST, "Mono10")
  field(FVVL, "0x01100003")
  field(SXST, "Mono12")
  field(SXVL, "0x01100005")
  field(SVST, "Mono8")
  field(SVVL, "0x01080001")
  field(EIST, "BGRA8Packed")
  field(EIVL, "0x02200017")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PixelFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormat")
  field(ZRST, "BayerBG10")
  field(ZRVL, "0x0110000F")
  field(ONST, "BayerBG10p")
  field(ONVL, "0x010A0052")
  field(TWST, "BayerBG12")
  field(TWVL, "0x01100013")
  field(THST, "BayerBG12p")
  field(THVL, "0x010C0053")
  field(FRST, "BayerBG8")
  field(FRVL, "0x0108000B")
  field(FVST, "Mono10")
  field(FVVL, "0x01100003")
  field(SXST, "Mono12")
  field(SXVL, "0x01100005")
  field(SVST, "Mono8")
  field(SVVL, "0x01080001")
  field(EIST, "BGRA8Packed")
  field(EIVL, "0x02200017")
  field(DISA, "0")
}

record(longin, "$(P)$(R)BinningHorizontal_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningHorizontal")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BinningHorizontal") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningHorizontal")
  field(DISA, "0")
}

record(longin, "$(P)$(R)BinningVertical_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningVertical")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BinningVertical") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningVertical")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DecimationHorizontal_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationHorizontal")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DecimationHorizontal") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationHorizontal")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DecimationVertical_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationVertical")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DecimationVertical") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationVertical")
  field(DISA, "0")
}

record(longin, "$(P)$(R)OffsetX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)OffsetX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)OffsetY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)OffsetY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetY")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)BinningSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningSelector")
  field(ZRST, "Sensor")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)BinningSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningSelector")
  field(ZRST, "Sensor")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DecimationSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationSelector")
  field(ZRST, "Sensor")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DecimationSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationSelector")
  field(ZRST, "Sensor")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)SensorShutterMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorShutterMode")
  field(ZRST, "Global")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)SensorShutterMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorShutterMode")
  field(ZRST, "Global")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(bi, "$(P)$(R)ReverseX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ReverseX")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)ReverseX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ReverseX")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)ReverseY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ReverseY")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)ReverseY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ReverseY")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)WidthMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WidthMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)WidthMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WidthMax")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)BinningHorizontalPattern_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningHorizontalPattern")
  field(ZRST, "Bayer")
  field(ZRVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)BinningHorizontalPattern") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningHorizontalPattern")
  field(ZRST, "Bayer")
  field(ZRVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)BinningVerticalPattern_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningVerticalPattern")
  field(ZRST, "Bayer")
  field(ZRVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)BinningVerticalPattern") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningVerticalPattern")
  field(ZRST, "Bayer")
  field(ZRVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DecimationHorizontalPattern_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationHorizontalPattern")
  field(ZRST, "Mono")
  field(ZRVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DecimationHorizontalPattern") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationHorizontalPattern")
  field(ZRST, "Mono")
  field(ZRVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DecimationVerticalPattern_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationVerticalPattern")
  field(ZRST, "Mono")
  field(ZRVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DecimationVerticalPattern") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DecimationVerticalPattern")
  field(ZRST, "Mono")
  field(ZRVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)HeightMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HeightMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)HeightMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HeightMax")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)BinningHorizontalMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningHorizontalMode")
  field(ZRST, "Sum")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)BinningHorizontalMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningHorizontalMode")
  field(ZRST, "Sum")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)BinningVerticalMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningVerticalMode")
  field(ZRST, "Sum")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)BinningVerticalMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BinningVerticalMode")
  field(ZRST, "Sum")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AcquisitionMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionMode")
  field(ZRST, "Continuous")
  field(ZRVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AcquisitionMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionMode")
  field(ZRST, "Continuous")
  field(ZRVL, "2")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionStart") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStart")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionStop") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStop")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)ExposureMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureMode")
  field(ZRST, "Timed")
  field(ZRVL, "1")
  field(ONST, "TriggerWidth")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)ExposureMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureMode")
  field(ZRST, "Timed")
  field(ZRVL, "1")
  field(ONST, "TriggerWidth")
  field(ONVL, "2")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ExposureTime_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTime")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ExposureTime") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTime")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSelector")
  field(ZRST, "AcquisitionStart")
  field(ZRVL, "4")
  field(ONST, "ExposureActive")
  field(ONVL, "1")
  field(TWST, "ExposureStart")
  field(TWVL, "5")
  field(THST, "FrameBurstStart")
  field(THVL, "2")
  field(FRST, "FrameStart")
  field(FRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSelector")
  field(ZRST, "AcquisitionStart")
  field(ZRVL, "4")
  field(ONST, "ExposureActive")
  field(ONVL, "1")
  field(TWST, "ExposureStart")
  field(TWVL, "5")
  field(THST, "FrameBurstStart")
  field(THVL, "2")
  field(FRST, "FrameStart")
  field(FRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "On")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "On")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longout, "$(P)$(R)TriggerSoftware") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSoftware")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSource")
  field(ZRST, "Line5")
  field(ZRVL, "5")
  field(ONST, "Line6")
  field(ONVL, "6")
  field(TWST, "Line7")
  field(TWVL, "7")
  field(THST, "Software")
  field(THVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSource")
  field(ZRST, "Line5")
  field(ZRVL, "5")
  field(ONST, "Line6")
  field(ONVL, "6")
  field(TWST, "Line7")
  field(TWVL, "7")
  field(THST, "Software")
  field(THVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerActivation")
  field(ZRST, "AnyEdge")
  field(ZRVL, "2")
  field(ONST, "FallingEdge")
  field(ONVL, "1")
  field(TWST, "LevelHigh")
  field(TWVL, "3")
  field(THST, "LevelLow")
  field(THVL, "4")
  field(FRST, "RisingEdge")
  field(FRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerActivation")
  field(ZRST, "AnyEdge")
  field(ZRVL, "2")
  field(ONST, "FallingEdge")
  field(ONVL, "1")
  field(TWST, "LevelHigh")
  field(TWVL, "3")
  field(THST, "LevelLow")
  field(THVL, "4")
  field(FRST, "RisingEdge")
  field(FRVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)AcquisitionFrameRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFrameRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)AcquisitionFrameRate") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFrameRate")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionTimeout_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTimeout")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionTimeout") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTimeout")
  field(DISA, "0")
}

record(bi, "$(P)$(R)AEAGEnable_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGEnable")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)AEAGEnable") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGEnable")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(ai, "$(P)$(R)AEAGExpPrio_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGExpPrio")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)AEAGExpPrio") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGExpPrio")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AEAGExpLim_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGExpLim")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AEAGExpLim") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGExpLim")
  field(DISA, "0")
}

record(ai, "$(P)$(R)AEAGGainLim_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGGainLim")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)AEAGGainLim") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGGainLim")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AEAGLevel_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGLevel")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AEAGLevel") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AEAGLevel")
  field(DISA, "0")
}

record(bi, "$(P)$(R)BadpixelCorrection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BadpixelCorrection")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)BadpixelCorrection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BadpixelCorrection")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionBuffersQueueSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionBuffersQueueSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionBuffersQueueSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionBuffersQueueSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionBurstFrameCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionBurstFrameCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionBurstFrameCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionBurstFrameCount")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AcquisitionTimingMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTimingMode")
  field(ZRST, "FrameRateLimit")
  field(ZRVL, "2")
  field(ONST, "FreeRun")
  field(ONVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AcquisitionTimingMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionTimingMode")
  field(ZRST, "FrameRateLimit")
  field(ZRVL, "2")
  field(ONST, "FreeRun")
  field(ONVL, "0")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionAbort") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionAbort")
  field(DISA, "0")
}

record(bi, "$(P)$(R)AcquisitionStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStatus")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)AcquisitionStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStatus")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AcquisitionStatusSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStatusSelector")
  field(ZRST, "AcquisitionStatu")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AcquisitionStatusSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStatusSelector")
  field(ZRST, "AcquisitionStatu")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)TriggerDelay_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerDelay")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)TriggerDelay") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerDelay")
  field(PREC, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSelector")
  field(ZRST, "Line1")
  field(ZRVL, "0")
  field(ONST, "Line2")
  field(ONVL, "1")
  field(TWST, "Line3")
  field(TWVL, "2")
  field(THST, "Line4")
  field(THVL, "3")
  field(FRST, "Line5")
  field(FRVL, "4")
  field(FVST, "Line6")
  field(FVVL, "5")
  field(SXST, "Line7")
  field(SXVL, "6")
  field(SVST, "Line8")
  field(SVVL, "7")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSelector")
  field(ZRST, "Line1")
  field(ZRVL, "0")
  field(ONST, "Line2")
  field(ONVL, "1")
  field(TWST, "Line3")
  field(TWVL, "2")
  field(THST, "Line4")
  field(THVL, "3")
  field(FRST, "Line5")
  field(FRVL, "4")
  field(FVST, "Line6")
  field(FVVL, "5")
  field(SXST, "Line7")
  field(SXVL, "6")
  field(SVST, "Line8")
  field(SVVL, "7")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineMode")
  field(ZRST, "Input")
  field(ZRVL, "0")
  field(ONST, "Output")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineMode")
  field(ZRST, "Input")
  field(ZRVL, "0")
  field(ONST, "Output")
  field(ONVL, "1")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LineInverter_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInverter")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LineInverter") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInverter")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LineStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatus")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LineStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatus")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSource")
  field(ZRST, "Blink")
  field(ZRVL, "11")
  field(ONST, "ExposureActive")
  field(ONVL, "4")
  field(TWST, "FrameActive")
  field(TWVL, "2")
  field(THST, "IOStatus1")
  field(THVL, "20")
  field(FRST, "IOStatus2")
  field(FRVL, "21")
  field(FVST, "IOStatus3")
  field(FVVL, "22")
  field(SXST, "IOStatus4")
  field(SXVL, "23")
  field(SVST, "IOStatus5")
  field(SVVL, "24")
  field(EIST, "IOStatus6")
  field(EIVL, "25")
  field(NIST, "IOStatus7")
  field(NIVL, "26")
  field(TEST, "IOStatus8")
  field(TEVL, "27")
  field(ELST, "Off")
  field(ELVL, "0")
  field(TVST, "On")
  field(TVVL, "1")
  field(TTST, "PCIeLane")
  field(TTVL, "14")
  field(FTST, "PCIeSpeed")
  field(FTVL, "13")
  field(FFST, "Readout")
  field(FFVL, "15")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSource")
  field(ZRST, "Blink")
  field(ZRVL, "11")
  field(ONST, "ExposureActive")
  field(ONVL, "4")
  field(TWST, "FrameActive")
  field(TWVL, "2")
  field(THST, "IOStatus1")
  field(THVL, "20")
  field(FRST, "IOStatus2")
  field(FRVL, "21")
  field(FVST, "IOStatus3")
  field(FVVL, "22")
  field(SXST, "IOStatus4")
  field(SXVL, "23")
  field(SVST, "IOStatus5")
  field(SVVL, "24")
  field(EIST, "IOStatus6")
  field(EIVL, "25")
  field(NIST, "IOStatus7")
  field(NIVL, "26")
  field(TEST, "IOStatus8")
  field(TEVL, "27")
  field(ELST, "Off")
  field(ELVL, "0")
  field(TVST, "On")
  field(TVVL, "1")
  field(TTST, "PCIeLane")
  field(TTVL, "14")
  field(FTST, "PCIeSpeed")
  field(FTVL, "13")
  field(FFST, "Readout")
  field(FFVL, "15")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFormat")
  field(ZRST, "LED")
  field(ZRVL, "2")
  field(ONST, "NonIsolated")
  field(ONVL, "1")
  field(TWST, "OptoCoupled")
  field(TWVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFormat")
  field(ZRST, "LED")
  field(ZRVL, "2")
  field(ONST, "NonIsolated")
  field(ONVL, "1")
  field(TWST, "OptoCoupled")
  field(TWVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)UserOutputSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputSelector")
  field(ZRST, "UserOutput0")
  field(ZRVL, "1")
  field(ONST, "UserOutput1")
  field(ONVL, "2")
  field(TWST, "UserOutput2")
  field(TWVL, "3")
  field(THST, "UserOutput3")
  field(THVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)UserOutputSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputSelector")
  field(ZRST, "UserOutput0")
  field(ZRVL, "1")
  field(ONST, "UserOutput1")
  field(ONVL, "2")
  field(TWST, "UserOutput2")
  field(TWVL, "3")
  field(THST, "UserOutput3")
  field(THVL, "4")
  field(DISA, "0")
}

record(bi, "$(P)$(R)UserOutputValue_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputValue")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)UserOutputValue") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputValue")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)BalanceWhiteAuto_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BalanceWhiteAuto")
  field(ZRST, "Continuous")
  field(ZRVL, "2")
  field(ONST, "Off")
  field(ONVL, "0")
  field(TWST, "Once")
  field(TWVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)BalanceWhiteAuto") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BalanceWhiteAuto")
  field(ZRST, "Continuous")
  field(ZRVL, "2")
  field(ONST, "Off")
  field(ONVL, "0")
  field(TWST, "Once")
  field(TWVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)GainSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GainSelector")
  field(ZRST, "All")
  field(ZRVL, "0")
  field(ONST, "AnalogAll")
  field(ONVL, "1")
  field(TWST, "DigitalAll")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)GainSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GainSelector")
  field(ZRST, "All")
  field(ZRVL, "0")
  field(ONST, "AnalogAll")
  field(ONVL, "1")
  field(TWST, "DigitalAll")
  field(TWVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Gain_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Gain")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Gain") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Gain")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)WhiteBalanceRed_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceRed")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)WhiteBalanceRed") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceRed")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)WhiteBalanceGreen_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceGreen")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)WhiteBalanceGreen") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceGreen")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)WhiteBalanceBlue_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceBlue")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)WhiteBalanceBlue") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceBlue")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)GammaY_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GammaY")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)GammaY") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GammaY")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)GammaC_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GammaC")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)GammaC") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GammaC")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Sharpness_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Sharpness")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Sharpness") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Sharpness")
  field(PREC, "3")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LUTEnable_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTEnable")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LUTEnable") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTEnable")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LUTIndex_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTIndex")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LUTIndex") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTIndex")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LUTValue_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTValue")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LUTValue") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTValue")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PayloadSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PayloadSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)PayloadSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PayloadSize")
  field(DISA, "0")
}

